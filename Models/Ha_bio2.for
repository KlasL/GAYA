c$DEBUG
      SUBROUTINE GRUVAX(ihper,ireg,gryta,
     *                  ata,agr,abj,hct,hcg,torv,torr,syl,nol,fukt,bgr,
     *                  hoh,del,gods,sost,reg5,mar,ort,
     *                  gmax,nant,its,ald,gdi,gtil)
c-----------------------------------------------------------------------
c  (in)  ihper = 1=ogallrat; 2=nygallrat; 3=gallrat
c   "    ireg  = region (1=; 2=; 3=
c   "    gryta = grundyta p† ytan (m2/ha)
c   "                       A(23)=FUKT
c   "                       A(24)=BREDDGRAD
c   "    A(14)=TP           A(25)=H\JD \ HAV
c   "    A(15)=GP           A(26)=BRE*HOH
c   "    A(16)=BP           A(27)=BREDDG.2
c   "    A(17)=GH100        A(28)=DELYTA
c   "    A(18)=TH100        A(29)=G\DSLING
c   "    A(19)=TORV         A(30)=KONSTANT  (1)
c   "    A(20)=TORR         A(31)=SOST
c   "    A(21)=SYLUT        A(32)=REG5
c   "    A(22)=NOLUT        A(33)=MARITIMT
c   "                       A(34)=\RTTYP
c   "    gmax  = maximal grundyta f”r tr„d p† yta (cm2)
c   "    nant  = antal tr„d p† ytan
c   "    its(i)= tr„dslag f”r tr„d i
c   "    ald(i)= br”sth”jds†lder f”r tr„d i
c   "    gdi(i)= grundyta f”r tr„d i (cm2)
c  (ut)  gtil(i)= tillv„xt i grundyta f”r tr„d i (cm2)
c-----------------------------------------------------------------------
c-- formella argument
      INTEGER*4   ihper,ireg,torv,torr,syl,nol,fukt,del,gods,sost,reg5,
     *            mar,ort,nant,its(1)
      REAL*4      gryta,ata,agr,abj,hct,hcg,bgr,hoh,gmax,ald(1),gdi(1),
     *            gtil(1)
c-- lokala deklarationer
      INTEGER*4 KB(6,2,3),i,j,k,isl,kix,iak,it
      REAL*4 TKOF(20,34),SUM(6,2),B(3),GYMAX(20,3),AALD(3),LOGBIAS(20),
     *            a(34),tilv
C
      DATA (((KB(I,J,K),I=1,6),J=1,2),K=1,3)/  1,  7, 13, 17, 19, 20,
     .                                         2,  8, 14, 17, 19, 20,
     .                                         3,  9, 13, 17, 19, 20,
     .                                         4, 10, 14, 17, 19, 20,
     .                                         5, 11, 15, 18, 19, 20,
     .                                         6, 12, 16, 18, 19, 20/
C
      DATA LOGBIAS/ 0.08765, 0.12600, 0.113456, 0.11338, 0.12814,
     .              0.13201, 0.11050, 0.138550, 0.12776, 0.14909,
     .              0.13835, 0.15644, 0.209100, 0.20277, 0.21600,
     .              0.24270, 0.17714, 0.198800, 0.17165, 0.08700/
C
      DATA ((GYMAX(I,J),J=1,3),I=1,20) /
     .   43.99 ,   37.04 ,   61.78 ,   44.66 ,   52.41 ,   49.33 ,
     .   47.43 ,   43.38 ,  105.62 ,   48.86 ,   34.30 ,   58.19 ,
     .   41.12 ,   33.12 ,   37.62 ,   45.10 ,   41.88 ,   50.78 ,
     .   50.01 ,   31.31 , 2446.18 ,   73.47 ,   99.99 ,   99.99 ,
     .   60.25 ,   77.85 ,  113.00 ,   72.60 ,   63.48 ,   89.74 ,
     .   45.92 ,   56.03 ,   45.68 ,   41.84 ,   39.82 ,   41.11 ,
     .   31.17 ,   53.92 ,   47.32 ,   33.26 ,   99.99 ,   89.15 ,
     .   31.64 ,   99.90 ,   53.61 ,   49.89 ,   43.73 ,   41.63 ,
     .   42.56 ,   99.90 ,   99.90 ,   39.41 ,  109.01 ,   24.88 ,
     .   38.64 ,   99.90 ,   43.49 ,   37.82 ,   35.86 ,   51.71 /
C
      DATA AALD / 55.,45.,45./
C
C      TALL NOAI
      DATA (TKOF(1,J),J=1,34)/
     .  1.2198944     , -.12142991E-02 , -4.0367246     ,
     .  77.768578     , -191.97511     , -.66242926E-01 ,
     . -.66400036E-01 , -.54112408E-01 , 0.75291970E-03 ,
     . 0.89623063E-03 , 0.43791247E-03 , -.17016126     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.31920257     ,
     . 0.00000000E+00 , 0.24517791E-02 , 0.23360634E-02 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.12152514     ,
     . -.56155708E-01 , 0.15604559     ,  1.3027869     ,
     . 0.00000000E+00 , 0.00000000E+00 , -.99352868E-02 ,
     . 0.92899293E-01 , 0.99816978E-01 , -46.041729     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      TALL NOAII
      DATA (TKOF(2,J),J=1,34)/
     .  1.0633055     , -.53051894E-03 , 0.00000000E+00 ,
     .  158.58514     , -3605.6318     , -.62615260E-01 ,
     . -.48419956E-01 , -.52634295E-01 , 0.70095109E-03 ,
     . 0.46192319E-03 , 0.53348241E-03 , -.31675816     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.28762233     ,
     . 0.34133726     , 0.30746050E-02 , 0.27870766E-02 ,
     . 0.39932078     , -.48107754E-01 , 0.53028483E-01 ,
     . -.53450253E-01 , 0.00000000E+00 , -.61609499E-01 ,
     . -.76913475E-02 , 0.11708465E-03 , 0.00000000E+00 ,
     . 0.14838645     , 0.12531452     , 0.51032323     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      TALL MEAI
      DATA (TKOF(3,J),J=1,34)/
     .  1.0932496     , -.45887521E-03 , -4.0551753     ,
     .  95.219528     , -445.10657     , -.47256108E-01 ,
     . -.34902904E-01 , -.30433970E-01 , 0.49819006E-03 ,
     . 0.40224640E-03 , 0.14406900E-03 ,  2.3348472     ,
     . -1.6232597     , 0.00000000E+00 , 0.33477846     ,
     . 0.00000000E+00 , 0.25445185E-03 , 0.80004742E-03 ,
     . 0.17215331     , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.13568376     , 0.00000000E+00 ,
     . -.36525138E-01 , 0.59703295E-03 , 0.00000000E+00 ,
     . 0.16428301     , 0.52583363E-01 , -3.9490423     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      TALL MEAII
      DATA (TKOF(4,J),J=1,34)/
     . 0.90113842     , -.94210940E-04 , 0.00000000E+00 ,
     .  166.34789     , -4213.8643     , -.58169268E-01 ,
     . -.56115586E-01 , -.50914612E-01 , 0.59532304E-03 ,
     . 0.81798952E-03 , 0.43750228E-03 ,  2.3240006     ,
     . -1.6574745     , 0.00000000E+00 , 0.37659919     ,
     . 0.00000000E+00 , 0.17995721E-02 , 0.24083664E-02 ,
     . 0.46113142     , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.85869744E-01 , 0.00000000E+00 ,
     . -.29433738E-01 , 0.47369389E-03 , 0.00000000E+00 ,
     . 0.12522870     , 0.11201516     , -3.4959855     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      TALL SOAI
      DATA (TKOF(5,J),J=1,34)/
     .  1.4888244     , -.10039507E-02 , -9.9781055     ,
     .  140.20134     , -757.17950     , -.54687146E-01 ,
     . -.58140814E-01 , -.61332099E-01 , 0.66493923E-03 ,
     . 0.87783090E-03 , 0.81506383E-03 , -.16288485     ,
     . 0.00000000E+00 , 0.19799662     , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.94400049E-03 , 0.60341496E-03 ,
     . 0.34175673     , -.12512566     , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.92116155E-01 , 0.12978718     , -5.0614390     ,
     . 0.10166794     , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      TALL SOAII
      DATA (TKOF(6,J),J=1,34)/
     . 0.85280466     , -.14701999E-03 , 0.00000000E+00 ,
     .  148.40669     , -2740.8892     , -.38635094E-01 ,
     . -.35843845E-01 , -.37468482E-01 , 0.42830984E-03 ,
     . 0.42792177E-03 , 0.36890939E-03 ,  1.9038430     ,
     . -1.3079877     , 0.18171412     , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.87209517E-03 , 0.75936172E-03 ,
     . 0.29165804     , -.11758453     , -.73810622E-01 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , -.81851649E-05 , 0.00000000E+00 ,
     . 0.11152325     , 0.10516143     , -3.1876907     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      GRAN SOAI
      DATA (TKOF(11,J),J=1,34)/
     .  1.2994665     , -.32205271E-03 , -4.2744765     ,
     .  130.01685     , -887.71338     , -.61903231E-01 ,
     . -.51359300E-01 , -.60124654E-01 , 0.67406072E-03 ,
     . 0.45833646E-03 , 0.65807032E-03 , -.44756287     ,
     . 0.00000000E+00 , -.19273046     , -.42806849     ,
     . -.30893275     , 0.21659541E-03 , 0.70421887E-03 ,
     . 0.55117842E-01 , -.10322542     , -.79993136E-01 ,
     . -.11318654     , 0.45389496E-01 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.63629299E-01 , 0.37888177E-01 , -3.6009123     ,
     . 0.00000000E+00 , 0.98700136E-01 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      GRAN SOAII
      DATA (TKOF(12,J),J=1,34)/
     .  1.0063775     , 0.00000000E+00 , 0.00000000E+00 ,
     .  166.64375     , -2957.2344     , -.57053741E-01 ,
     . -.54387908E-01 , -.55214655E-01 , 0.68177067E-03 ,
     . 0.68290520E-03 , 0.67160820E-03 ,  1.3695741     ,
     . -1.2014568     , -.35991868     , -.55521178     ,
     . -.70004201     , 0.57151914E-03 , 0.66864898E-03 ,
     . 0.73311210E-01 , -.19658293     , -.10337412     ,
     . -.10263900     , 0.69786742E-01 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.35977248E-01 , 0.58977846E-01 , -3.1169631     ,
     . 0.00000000E+00 , 0.54467380E-01 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      BJRK SOAI
      DATA (TKOF(15,J),J=1,34)/
     .  1.0730972     , 0.00000000E+00 , -5.7526932     ,
     .  146.00055     , -1033.5298     , -.50493978E-01 ,
     . -.31237636E-01 , -.49770426E-01 , 0.79803320E-03 ,
     . 0.00000000E+00 , 0.46416710E-03 ,  1.5895323     ,
     . -.86151439     , 0.86277729     , 0.28913003     ,
     . 0.00000000E+00 , 0.14655773E-02 , 0.15297406E-02 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.10582978     , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.18366458     , 0.73269516E-01 , -4.9598565     ,
     . -.95623828E-01 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      BJRK SOAII
      DATA (TKOF(16,J),J=1,34)/
     . 0.86065644     , 0.00000000E+00 , 0.00000000E+00 ,
     .  76.322411     , 0.00000000E+00 , -.32163251E-01 ,
     . -.35012688E-01 , -.37450291E-01 , 0.32234247E-03 ,
     . 0.40030747E-03 , 0.44980322E-03 ,  1.6701843     ,
     . -.80137813     , 0.67104298     , 0.45024577     ,
     . 0.24658862     , 0.17333047E-02 , 0.22590975E-02 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.12044046     , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.13060836     , 0.19571120     , -3.9666097     ,
     . -.11905326     , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      GRAN  NOAI
      DATA (TKOF(7,J),J=1,34)/
     .  1.1503073     , -.65031921E-03 , 0.00000000E+00 ,
     .  70.511574     , -314.35129     , -.36089830E-01 ,
     . -.32109763E-01 , -.22615924E-01 , 0.36083127E-03 ,
     . 0.51283324E-03 , 0.46227037E-05 , -.87521493     ,
     . 0.49368155     , -.27400699     , -.33471704     ,
     . 0.00000000E+00 , 0.11976203E-02 , 0.11935009E-02 ,
     . 0.23003249     , 0.00000000E+00 , 0.54127563E-01 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . -.44233906E-02 , 0.76409364E-04 , 0.00000000E+00 ,
     . 0.48618279E-01 , 0.15556385     , -2.9788063     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      GRAN  MEAI
      DATA (TKOF(9,J),J=1,34)/
     .  1.4710940     , -.69197110E-03 , -7.9925699     ,
     .  125.76864     , -533.24530     , -.49683452E-01 ,
     . -.33744518E-01 , -.38862135E-01 , 0.41228667E-03 ,
     . 0.21671459E-03 , 0.17195425E-03 , -.53501755     ,
     . 0.00000000E+00 , -.63205773     , -.59631515     ,
     . -.41666260     , 0.17481232E-02 , 0.27542873E-02 ,
     . 0.24144866     , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.13146068     , -11.600273     ,
     . 0.23555681E-01 , -.38030185E-03 , 0.97148426E-01 ,
     . 0.64886749E-01 , 0.99316113E-01 ,  341.58694     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      GRAN NOAII
      DATA (TKOF(8,J),J=1,34)/
     .  1.0341823     , -.13098661E-03 , 0.00000000E+00 ,
     .  169.23524     , -3620.8987     , -.25065292E-01 ,
     . -.79173939E-02 , -.13173238E-01 , 0.17057359E-03 ,
     . -.18977532E-03 , -.19557562E-03 , -.20862041     ,
     . 0.00000000E+00 , -.40424174     , -.30212277     ,
     . 0.00000000E+00 , 0.12081008E-02 , 0.15637354E-02 ,
     . 0.12817557     , -.14903317     , 0.00000000E+00 ,
     . -.53920079E-01 , 0.00000000E+00 , 0.92969751     ,
     . 0.11499578E-03 , 0.00000000E+00 , -.71427454E-02 ,
     . 0.12669519     , 0.18797243     , -33.661625     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      GRAN MEAII
      DATA (TKOF(10,J),J=1,34)/
     .  1.2252167     , -.53488521E-03 , 0.00000000E+00 ,
     .  187.88553     , -4942.4951     , -.40724434E-01 ,
     . -.32427818E-01 , -.33682209E-01 , 0.28048499E-03 ,
     . 0.25540491E-03 , 0.18766453E-03 , -.81636763     ,
     . 0.40139332     , -.30428439     , -.18038794     ,
     . 0.00000000E+00 , 0.22558952E-02 , 0.32384461E-02 ,
     . 0.37673920     , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.11133468     , -10.388400     ,
     . 0.30944100E-01 , -.50260435E-03 , 0.87352112E-01 ,
     . 0.90602748E-01 , 0.32525968E-01 ,  304.25296     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      BJRK NMAI
      DATA (TKOF(13,J),J=1,34)/
     .  1.0355833     , 0.00000000E+00 , 0.00000000E+00 ,
     .  116.76567     , -1064.2555     , -.72642215E-01 ,
     . -.45532908E-01 , -.51404983E-01 , 0.11651187E-02 ,
     . 0.42222082E-03 , 0.54315705E-03 , -.23669741     ,
     . 0.00000000E+00 , -.69018793     , -.55953401     ,
     . -.71411884     , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.22858548     , 0.00000000E+00 , 0.00000000E+00 ,
     . -.16804944     , 0.13660824     , 0.00000000E+00 ,
     . 0.28355193E-03 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.45906067E-01 , 0.10208514     , -2.7215064     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.13364507     /

C      BJRK NMAII
      DATA (TKOF(14,J),J=1,34)/
     .  1.0652922     , 0.00000000E+00 , 0.00000000E+00 ,
     .  200.31120     , -4058.3184     , -.64159468E-01 ,
     . -.16802359E-01 , -.40875070E-01 , 0.96451415E-03 ,
     . -.34084232E-03 , 0.22925473E-03 , -1.4923184     ,
     . 0.80964762     , -.80276555     , -.66804576     ,
     . -.62539017     , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.35839468     , 0.00000000E+00 , 0.00000000E+00 ,
     . -.19078416     , 0.21901032     ,  1.0530070     ,
     . 0.00000000E+00 , 0.00000000E+00 , -.81379553E-02 ,
     . 0.18759781     , 0.10200480     , -37.017944     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.11808387     /

C      OVR LOVNO
      DATA (TKOF(17,J),J=1,34)/
     .  1.1207741     , 0.00000000E+00 , 0.00000000E+00 ,
     .  48.728222     , 0.00000000E+00 , -.27320145E-01 ,
     . -.19330734E-01 , -.19330734E-01 , 0.32094921E-03 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , -.47541934     , 0.24701010     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . -.27834153     , 0.00000000E+00 , 0.63271083E-01 ,
     . 0.00000000E+00 , -.95194209E-05 , 0.00000000E+00 ,
     . 0.20279391     , 0.00000000E+00 , -6.8695111     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      OVR LOSO
      DATA (TKOF(18,J),J=1,34)/
     .  1.2425539     , -.38067318E-03 , 0.00000000E+00 ,
     .  86.922943     , -496.47049     , -.57340641E-01 ,
     . -.34258068E-01 , -.74100301E-01 , 0.72741881E-03 ,
     . 0.15713330E-03 , 0.14893065E-02 , -1.4060723     ,
     . 0.85102832     , 0.32524523     , 0.24568059     ,
     . 0.20103903     , 0.90257742E-03 , 0.84648840E-03 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . -.14761014     , 0.00000000E+00 , 0.49305089E-01 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.10351816     , 0.00000000E+00 , -6.5246186     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      BOK
      DATA (TKOF(19,J),J=1,34)/
     .  1.5935903     , -.51910983E-03 , 0.00000000E+00 ,
     .  90.769325     , -626.04108     , -.40445954E-01 ,
     . -.17664259E-01 , -.35226766E-01 , 0.52343268E-03 ,
     . 0.00000000E+00 , 0.40498830E-03 , -2.7505279     ,
     .  1.2066453     ,  1.0085660     , 0.00000000E+00 ,
     . 0.68754250     , 0.15977971E-02 , 0.33566036E-03 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . -.12883925     , 0.22649972E-02 , 0.00000000E+00 ,
     . 0.35173616     , 0.00000000E+00 , -5.1875067     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 /

C      EK
      DATA (TKOF(20,J),J=1,34)/
     .  1.0682794     , 0.00000000E+00 , -4.2895813     ,
     .  162.32246     , -1568.3384     , -.58269843E-01 ,
     . -.48067022E-01 , -.35959758E-01 , 0.77030365E-03 ,
     . 0.67014329E-03 , 0.34773097E-03 , 0.29030326     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.22321329     ,
     . 0.25425664     , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.00000000E+00 , 0.00000000E+00 , -3.8178203     ,
     . 0.00000000E+00 , 0.00000000E+00 , 0.00000000E+00 ,
     . 0.13856307     /
c-----------------------------------------------------------------------

c-- nollst„ll och annan initiering
      DO 5 I=1,6
         DO 5 J=1,2
5           SUM(I,J)=0.0
      DO 41 I=6,11
41       A(I)=0.
      a(14)=ata
      a(15)=agr
      a(16)=abj
      a(17)=hcg
      a(18)=hct
      a(19)=torv
      a(20)=torr
      a(21)=syl
      a(22)=nol
      a(23)=fukt
      a(24)=bgr
      a(25)=hoh
      a(26)=a(24)*a(25)
      a(27)=a(24)*a(24)
      a(28)=del
      a(29)=gods
      a(30)=1.
      a(31)=sost
      a(32)=reg5
      a(33)=mar
      a(34)=ort

c-- gallringshistorik
      B(1)    =0.0
      B(2)    =0.0
      B(3)    =0.0
      b(ihper)=gryta

c-- BERŽKNA TRŽDSLAGSVISA FUNKTIONSVŽRDEN ------------------------------

      DO 20 ISL=1,6

         IF(A(14).GT.0.5) THEN
            A(17)=0.00
         ELSE
            A(18)=0.00
         END IF

         IF(ISL.GE.4) THEN
            KIX=KB(ISL,1,IREG)
            DO 10 I=14,34
10             SUM(ISL,1)=SUM(ISL,1)+A(I)*TKOF(KIX,I)
            SUM(ISL,2)=SUM(ISL,1)
         ELSE
            IF(ISL.LE.2.AND.A(19).EQ.1.) THEN
              A(17)=0.00
              A(18)=0.00
            END IF
            DO 11 IAK=1,2
               KIX=KB(ISL,IAK,IREG)
               DO 11 J=14,34
11                SUM(ISL,IAK)=SUM(ISL,IAK)+A(J)*TKOF(KIX,J)
         ENDIF
20    CONTINUE

c-- TRŽDVIS BERŽKNING F™R RESTEN AV FUNKTIONEN -------------------------

      DO 100 J=1,NANT
         IT=ITS(J)
         IAK=1
         IF(ALD(J).GE.AALD(IREG))  IAK=2
         KIX=KB(IT,IAK,IREG)

         A(1)=ALOG(GDI(J))
         A(2)=GDI(J)
         A(3)=A(1)/(ALD(J)+10.)
         A(4)=1./(ALD(J)+10.)
         A(5)=A(4)*A(4)
         A(5+ihper)=MIN(B(ihper),GYMAX(KIX,ihper))
         A(8+ihper)=A(5+ihper)*A(5+ihper)
         A(13)=min(GDI(J)/GMAX,1.)
         A(12)=SQRT(A(13))

         TILV=0.00
         DO 90 I=1,13
90          TILV=TILV+A(I)*TKOF(KIX,I)
         TILV=TILV+SUM(IT,IAK)
         TILV=TILV+LOGBIAS(KIX)
         GTIL(J)=EXP(TILV)
         IF (IT.EQ.5.AND.B(ihper).GT.20.)
     *      GTIL(J)=GTIL(J)*SQRT(20./B(ihper))

100   CONTINUE

      RETURN
      END

      SUBROUTINE ULFBARKS(n_2,reg_3,its_1,gdi_1,gmx_2,iat_2,hct_2,bgr_3,
     *                    hoh_3,ata_2,agr_2,abj_2,sost_3,reg5_3,del_2,
     *                    bark_1)
c-----------------------------------------------------------------------
c  Augusti -91
c  BARKFUNKTION - Ulf S mindre (utan tr„d†lder)
c
c  Rutinen ber„knar dubbel barktjocklek f”r n_2 tr„d (mm).
c
c  (in)  n_2      = antal tr„d
c        reg_3    = region (1=N:a, 2=M:a, 3=S:a Sv)
c        its_1(i) = tr„dslag tr„d i
*        1=TALL,2=GRAN,3=BJ\RK,4=\VR.L\V,5=BOK,6=EK (KOD 5,6 [NDR 8509)
c        gdi_1(i) = gyta tr„d i (cm2)                 <=> d(mm)
c  [     bha_1(i) = br”sth”jds†lder tr„d i (†r)       <=> t (†r)       ]
c        gmx_2    = tr„d med max gyta (cm2)           f”r dkvot
c  [     g_2      = gyta (m2/ha)                      <=> G (m2/ha)    ]
c        iat_2    = total†lder (†r)                   <=> Akl (†r)
c        hct_2    = SI tall (dm)                      <=> SI(T) (dm)
c  [     hcg_2    = SI gran (dm)                      <=> SI(G) (dm)   ]
c        bgr_3    = breddgrad (o)                     <=> lat (o)
c        hoh_3    = h”jd ”ver havet (m)               <=> alt (m)
c        ata_2    = andel tall av gyta             <=> tp el GT/G (dec)
c        agr_2    = andel gran av gyta             <=> gp el GG/G (")
c        abj_2    = andel bj”rk av gyta            <=> bp el GB/G (")
c  [     abo_2    = andel bok av gyta              <=> bop el GBO/G (")]
c  OBS!  xx       = kustn„ra (ej def s„tts till 0)    <=> kust (dummy)
c        sost_3   = syd”stra Sverige                  <=> sost (dummy)
c        reg5_3   = region 5                          <=> reg5 (dummy)
c  [     mar_3    = maritimt klimat                   <=> mar (dummy)  ]
c  [OBS! xx       = kontklimat (ej def s„tts till 0)  <=> kont (dummy) ]
c        del_2    = dalad yta                         <=> delyta (dummy)
c  (ut)  bark_1(i)= dubbel barktjocklek f”r tr„d (mm)
c-----------------------------------------------------------------------
c-- formella
      INTEGER*4   n_2,reg_3,its_1(n_2),iat_2,sost_3,reg5_3,del_2
      REAL*4      gdi_1(n_2),gmx_2,hct_2,bgr_3,hoh_3,ata_2,agr_2,abj_2,
     *            bark_1(n_2)
c-- lokala
      INTEGER*4   i,j,k
      REAL*4      coe(30,3,6),logbias(3,6),var(30),bark_t(6)

      DATA        ((coe(i,j,1),j=1,3),i=1,30)/
c          Tall N           M             S
     *  -0.40225E+03,  -0.39422E+03,  -0.38360E+03,  ! 1/(d+50)        1
     *   0.15037E+05,   0.14040E+05,   0.13442E+05,  ! 1/(d+50)2       2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]       3
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]      4
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]              5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]            6
     *   0.88075E-01,   0.12632E+00,   0.00000E+00,  ! dkvot           7
     *  -0.11552E-01,  -0.46079E-01,   0.00000E+00,  ! dkvot2          8
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]              9
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]            10
     *   0.44577E-03,   0.30388E-03,   0.20965E-02,  ! Akl            11
     *   0.00000E+00,   0.00000E+00,  -0.88795E-05,  ! Akl2           12
     *  -0.15147E-03,  -0.92527E-03,  -0.74698E-03,  ! SI(T)          13
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]         14
     *  -0.13581E-01,  -0.64192E-01,   0.00000E+00,  ! lat            15
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]          16
     *   0.00000E+00,  -0.31573E-03,   0.10185E-01,  ! alt            17
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]          18
     *  -0.16395E-05,   0.00000E+00,  -0.17023E-03,  ! lat*alt        19
     *  -0.69739E-01,   0.00000E+00,  -0.24281E-01,  ! tp             20
     *   0.00000E+00,   0.58621E-01,   0.00000E+00,  ! gp             21
     *   0.00000E+00,   0.00000E+00,  -0.49230E-01,  ! bp             22
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]           23
     *  -0.82879E-01,  -0.94391E-01,   0.19141E+00,  ! kust           24
     *   0.00000E+00,   0.00000E+00,   0.57067E-01,  ! sost           25
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! reg5           26
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]           27
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]          28
     *   0.00000E+00,   0.00000E+00,   0.24619E-01,  ! delyta         29
     *   0.53324E+01,   0.86428E+01,   0.47240E+01/  ! c              30
      DATA        ((coe(i,j,2),j=1,3),i=1,30)/
c          Gran N           M             S
     *  -0.23633E+03,  -0.23633E+03,  -0.30355E+03,  ! 1/(d+50)
     *   0.78784E+04,   0.78784E+04,   0.13763E+05,  ! 1/(d+50)2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]
     *   0.35929E+00,   0.35929E+00,   0.30230E+00,  ! dkvot
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]
     *   0.13589E-02,   0.13589E-02,   0.00000E+00,  ! Akl
     *   0.62227E-05,   0.62227E-05,   0.23539E-04,  ! Akl2
     *  -0.15491E-02,  -0.15491E-02,  -0.13014E-02,  ! SI(T)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]
     *   0.28379E-01,   0.28379E-01,   0.00000E+00,  ! lat
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]
     *   0.00000E+00,   0.00000E+00,  -0.10863E-01,  ! alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]
     *   0.00000E+00,   0.00000E+00,   0.19027E-03,  ! lat*alt
     *   0.57123E-01,   0.57123E-01,   0.68055E-01,  ! tp
     *   0.00000E+00,   0.00000E+00,  -0.10406E+00,  ! gp
     *   0.00000E+00,   0.00000E+00,   0.62182E-01,  ! bp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]
     *  -0.71409E-01,  -0.71409E-01,   0.23053E+00,  ! kust
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! sost
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! reg5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]
     *   0.20245E-01,   0.20245E-01,   0.27539E-01,  ! delyta
     *   0.16604E+01,   0.16604E+01,   0.36138E+01/  ! c
      DATA        ((coe(i,j,3),j=1,3),i=1,30)/
c          Bj”rk N          M             S
     *  -0.37131E+03,  -0.37131E+03,  -0.64799E+03,  ! 1/(d+50)
     *   0.13012E+05,   0.13012E+05,   0.33167E+05,  ! 1/(d+50)2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]
     *   0.17146E+00,   0.17146E+00,   0.13804E+00,  ! dkvot
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]
     *   0.19655E-02,   0.19655E-02,   0.14517E-02,  ! Akl
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! Akl2
     *  -0.71109E-03,  -0.71109E-03,  -0.50779E-03,  ! SI(T)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]
     *   0.86881E-02,   0.86881E-02,   0.00000E+00,  ! lat
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]
     *   0.00000E+00,   0.00000E+00,   0.54445E-02,  ! alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]
     *   0.62991E-05,   0.62991E-05,  -0.99383E-04,  ! lat*alt
     *   0.18594E+00,   0.18594E+00,   0.88745E-01,  ! tp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! gp
     *   0.00000E+00,   0.00000E+00,  -0.14772E+00,  ! bp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! kust
     *   0.00000E+00,   0.00000E+00,  -0.51335E-01,  ! sost
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! reg5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! delyta
     *   0.31740E+01,   0.31740E+01,   0.50104E+01/  ! c
      DATA        ((coe(i,j,4),j=1,3),i=1,30)/
c          ™vr l”v N        M             S
     *  -0.17562E+03,  -0.17562E+03,  -0.34144E+03,  ! 1/(d+50)
     *   0.00000E+00,   0.00000E+00,   0.97900E+04,  ! 1/(d+50)2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]
     *   0.26968E+00,   0.26968E+00,   0.00000E+00,  ! dkvot
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]
     *   0.49609E-02,   0.49609E-02,   0.31101E-02,  ! Akl
     *   0.00000E+00,   0.00000E+00,  -0.22562E-04,  ! Akl2
     *   0.00000E+00,   0.00000E+00,  -0.21013E-02,  ! SI(T)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! lat
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! lat*alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! tp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! gp
     *   0.29703E+00,   0.29703E+00,   0.00000E+00,  ! bp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]
     *   0.86920E-01,   0.86920E-01,   0.00000E+00,  ! kust
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! sost
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! reg5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]
     *  -0.77013E-01,  -0.77013E-01,   0.00000E+00,  ! delyta
     *   0.28446E+01,   0.28446E+01,   0.45835E+01/  ! c
      DATA        ((coe(i,j,5),j=1,3),i=1,30)/
c          Bok N            M             S
     *  -0.17387E+03,  -0.17387E+03,  -0.17387E+03,  ! 1/(d+50)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! 1/(d+50)2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]
     *   0.16350E+00,   0.16350E+00,   0.16350E+00,  ! dkvot
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]
     *   0.22597E-02,   0.22597E-02,   0.22597E-02,  ! Akl
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! Akl2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! SI(T)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! lat
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! lat*alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! tp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! gp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! bp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! kust
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! sost
     *  -0.26953E+00,  -0.26953E+00,  -0.26953E+00,  ! reg5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! delyta
     *   0.24822E+01,   0.24822E+01,   0.24822E+01/  ! c
      DATA        ((coe(i,j,6),j=1,3),i=1,30)/
c          Ek N             M             S
     *  -0.29605E+03,  -0.29605E+03,  -0.29605E+03,  ! 1/(d+50)
     *   0.87235E+04,   0.87235E+04,   0.87235E+04,  ! 1/(d+50)2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]
     *   0.22680E-02,   0.22680E-02,   0.22680E-02,  ! Akl
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! Akl2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! SI(T)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! lat
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! lat*alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! tp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! gp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! bp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! kust
     *  -0.24349E+00,  -0.24349E+00,  -0.24349E+00,  ! sost
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! reg5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]
     *   0.44474E-01,   0.44474E-01,   0.44474E-01,  ! delyta
     *   0.39521E+01,   0.39521E+01,   0.39521E+01/  ! c
      DATA        logbias/
     *   0.02691, 0.00262, 0.02832, ! Tall
     *   0.02808, 0.02808, 0.03001, ! Gran
     *   0.04292, 0.04292, 0.04440, ! Bj”rk
     *   0.04292, 0.04292, 0.04440, ! ™vr l”v (uppg saknas; Bj”rk)
     *   0.03251, 0.03251, 0.03251, ! Bok
     *   0.02354, 0.02354, 0.02354/ ! Ek

      do 10 i=1,30
10       var(i)=0.0

c-- ytvar
      var(11)=iat_2
      var(12)=var(11)*var(11)
      var(13)=hct_2
      var(15)=bgr_3
      var(17)=hoh_3
      var(19)=var(15)*var(17)
      var(20)=ata_2
      var(21)=agr_2
      var(22)=abj_2
      var(25)=sost_3
      var(26)=reg5_3
      var(29)=del_2
      var(30)=1.

c-- tr„dslagsvis ber„kning
      do 20 j=1,6
         bark_t(j)=0.0
         do 20 i=9,30
20          bark_t(j)=bark_t(j)+var(i)*coe(i,reg_3,j)

c-- tr„dvis ber„kning
      do 30 k=1,n_2
         var(1)=1./(11.2838*SQRT(gdi_1(k))+50.)
         var(2)=var(1)*var(1)
         var(8)=gdi_1(k)/gmx_2
         var(7)=SQRT(var(8))
         bark_1(k)=bark_t(its_1(k))+logbias(reg_3,its_1(k))
         do 32 i=1,8
32          bark_1(k)=bark_1(k)+var(i)*coe(i,reg_3,its_1(k))
30       bark_1(k)=EXP(bark_1(k))

      RETURN
      END

      SUBROUTINE ULFHS(n_2,reg_3,its_1,gdi_1,gmx_2,iat_2,hct_2,bgr_3,
     *                 hoh_3,ata_2,agr_2,abj_2,sost_3,reg5_3,del_2, h_1)
c-----------------------------------------------------------------------
c  Augusti -91
c  H™JDFUNKTION - Ulf S mindre (utan tr„d†lder)
c
c  Rutinen ber„knar h”jden f”r n_2 tr„d (dm).
c
c  (in)  n_2      = antal tr„d
c        reg_3    = region (1=N:a, 2=M:a, 3=S:a Sv)
c        its_1(i) = tr„dslag tr„d i
*        1=TALL,2=GRAN,3=BJ\RK,4=\VR.L\V,5=BOK,6=EK (KOD 5,6 [NDR 8509)
c        gdi_1(i) = gyta tr„d i (cm2)                 <=> d(mm)
c  [     bha_1(i) = br”sth”jds†lder tr„d i (†r)       <=> t (†r)       ]
c        gmx_2    = tr„d med max gyta (cm2)           f”r dkvot
c  [     g_2      = gyta (m2/ha)                      <=> G (m2/ha)    ]
c        iat_2    = total†lder (†r)                   <=> Akl (†r)
c        hct_2    = SI tall (dm)                      <=> SI(T) (dm)
c  [     hcg_2    = SI gran (dm)                      <=> SI(G) (dm)   ]
c        bgr_3    = breddgrad (o)                     <=> lat (o)
c        hoh_3    = h”jd ”ver havet (m)               <=> alt (m)
c        ata_2    = andel tall av gyta             <=> tp el GT/G (dec)
c        agr_2    = andel gran av gyta             <=> gp el GG/G (")
c        abj_2    = andel bj”rk av gyta            <=> bp el GB/G (")
c  [     abo_2    = andel bok av gyta              <=> bop el GBO/G (")]
c  OBS!  xx       = kustn„ra (ej def s„tts till 0)    <=> kust (dummy)
c        sost_3   = syd”stra Sverige                  <=> sost (dummy)
c        reg5_3   = region 5                          <=> reg5 (dummy)
c  [     mar_3    = maritimt klimat                   <=> mar (dummy)  ]
c  OBS!  xx       = kontklimat (ej def s„tts till 0)  <=> kont (dummy)
c        del_2    = dalad yta                         <=> delyta (dummy)
c  (ut)  h_1      = h”jd f”r tr„d (dm)
c-----------------------------------------------------------------------
c-- formella
      INTEGER*4   n_2,reg_3,its_1(n_2),iat_2,sost_3,reg5_3,del_2
      REAL*4      gdi_1(n_2),gmx_2,hct_2,bgr_3,hoh_3,ata_2,agr_2,abj_2,
     *            h_1(n_2)
c-- lokala
      INTEGER*4   i,j,k
      REAL*4      coe(30,3,6),logbias(3,6),var(30),h_t(6)

      DATA        ((coe(i,j,1),j=1,3),i=1,30)/
c          Tall N           M             S
     *  -0.28390E+03,  -0.29249E+03,  -0.30345E+03,  ! 1/(d+50)        1
     *   0.64168E+04,   0.61832E+04,   0.88427E+04,  ! 1/(d+50)2       2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]       3
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]      4
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]              5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]            6
     *  -0.44962E+00,  -0.61165E+00,   0.91429E-01,  ! dkvot           7
     *   0.70355E-01,   0.13132E+00,  -0.28115E+00,  ! dkvot2          8
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]              9
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]            10
     *   0.63874E-02,   0.52675E-02,   0.68724E-02,  ! Akl            11
     *  -0.30707E-04,  -0.25358E-04,  -0.38585E-04,  ! Akl2           12
     *   0.12774E-02,   0.13721E-02,   0.16646E-02,  ! SI(T)          13
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]         14
     *  -0.15597E-01,   0.69771E-01,   0.00000E+00,  ! lat            15
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]          16
     *   0.00000E+00,   0.58106E-02,  -0.47335E-02,  ! alt            17
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]          18
     *  -0.48527E-05,  -0.10018E-03,   0.82679E-04,  ! lat*alt        19
     *   0.87350E-01,   0.22217E+00,   0.20570E+00,  ! tp             20
     *   0.00000E+00,   0.24504E+00,   0.29485E+00,  ! gp             21
     *   0.00000E+00,   0.23251E+00,   0.13909E+00,  ! bp             22
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]           23
     *  -0.72392E-01,  -0.10186E+00,  -0.19855E+00,  ! kust           24
     *   0.00000E+00,   0.00000E+00,   0.36444E-01,  ! sost           25
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! reg5           26
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]           27
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]          28
     *  -0.56157E-01,  -0.55749E-01,  -0.60312E-01,  ! delyta         29
     *   0.68125E+01,   0.15712E+01,   0.52706E+01/  ! c              30
      DATA        ((coe(i,j,2),j=1,3),i=1,30)/
c          Gran N           M             S
     *  -0.28663E+03,  -0.28663E+03,  -0.27421E+03,  ! 1/(d+50)
     *   0.47831E+04,   0.47831E+04,   0.38013E+04,  ! 1/(d+50)2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]
     *  -0.19831E+00,  -0.19831E+00,  -0.23760E+00,  ! dkvot
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]
     *   0.31669E-02,   0.31669E-02,   0.31094E-02,  ! Akl
     *  -0.16854E-04,  -0.16854E-04,  -0.20764E-04,  ! Akl2
     *   0.10855E-02,   0.10855E-02,   0.10161E-02,  ! SI(T)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]
     *  -0.99681E-02,  -0.99681E-02,   0.00000E+00,  ! lat
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]
     *   0.51262E-03,   0.51262E-03,   0.15166E-02,  ! alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]
     *  -0.12449E-04,  -0.12449E-04,  -0.25385E-04,  ! lat*alt
     *   0.60923E-01,   0.60923E-01,   0.10172E+00,  ! tp
     *   0.90784E-01,   0.90784E-01,   0.24012E+00,  ! gp
     *   0.00000E+00,   0.00000E+00,   0.68141E-01,  ! bp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]
     *  -0.62548E-01,  -0.62548E-01,  -0.69386E-01,  ! kust
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! sost
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! reg5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]
     *  -0.30688E-01,  -0.30688E-01,  -0.47848E-01,  ! delyta
     *   0.65200E+01,   0.65200E+01,   0.57495E+01/  ! c
      DATA        ((coe(i,j,3),j=1,3),i=1,30)/
c          Bj”rk N          M             S
     *  -0.26607E+03,  -0.26607E+03,  -0.22552E+03,  ! 1/(d+50)
     *   0.71415E+04,   0.71415E+04,   0.39171E+04,  ! 1/(d+50)2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]
     *  -0.39250E+00,  -0.39250E+00,  -0.32296E+00,  ! dkvot
     *   0.76500E-01,   0.76500E-01,   0.00000E+00,  ! dkvot2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]
     *   0.32789E-02,   0.32789E-02,   0.17264E-02,  ! Akl
     *  -0.22514E-04,  -0.22514E-04,  -0.11572E-04,  ! Akl2
     *   0.85255E-03,   0.85255E-03,   0.89953E-03,  ! SI(T)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]
     *  -0.18462E-01,  -0.18462E-01,   0.00000E+00,  ! lat
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]
     *   0.00000E+00,   0.00000E+00,  -0.90184E-02,  ! alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]
     *  -0.72180E-05,  -0.72180E-05,   0.15804E-03,  ! lat*alt
     *  -0.74398E-01,  -0.74398E-01,  -0.44799E-01,  ! tp
     *  -0.22539E-01,  -0.22539E-01,   0.11728E+00,  ! gp
     *   0.00000E+00,   0.00000E+00,   0.10104E+00,  ! bp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! kust
     *   0.00000E+00,   0.00000E+00,   0.47911E-01,  ! sost
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! reg5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]
     *  -0.35918E-01,  -0.35918E-01,  -0.68048E-01,  ! delyta
     *   0.72446E+01,   0.72446E+01,   0.57820E+01/  ! c
      DATA        ((coe(i,j,4),j=1,3),i=1,30)/
c          ™vr l”v N        M             S
     *  -0.14546E+03,  -0.14546E+03,  -0.22078E+03,  ! 1/(d+50)
     *   0.00000E+00,   0.00000E+00,   0.53920E+04,  ! 1/(d+50)2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]
     *   0.00000E+00,   0.00000E+00,  -0.17045E+00,  ! dkvot
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]
     *   0.53659E-02,   0.53659E-02,   0.53701E-02,  ! Akl
     *  -0.29042E-04,  -0.29042E-04,  -0.41932E-04,  ! Akl2
     *   0.17639E-02,   0.17639E-02,   0.53968E-03,  ! SI(T)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]
     *  -0.34200E-01,  -0.34200E-01,   0.00000E+00,  ! lat
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]
     *   0.00000E+00,   0.00000E+00,  -0.10758E-01,  ! alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]
     *   0.00000E+00,   0.00000E+00,   0.18781E-03,  ! lat*alt
     *   0.00000E+00,   0.00000E+00,  -0.17291E+00,  ! tp
     *   0.75841E-01,   0.75841E-01,   0.10783E+00,  ! gp
     *   0.00000E+00,   0.00000E+00,  -0.55868E-01,  ! bp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]
     *   0.15566E+00,   0.15566E+00,   0.00000E+00,  ! kust
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! sost
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! reg5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]
     *  -0.82953E-01,  -0.82953E-01,  -0.51870E-01,  ! delyta
     *   0.70706E+01,   0.70706E+01,   0.56569E+01/  ! c
      DATA        ((coe(i,j,5),j=1,3),i=1,30)/
c          Bok N            M             S
     *  -0.14407E+03,  -0.14407E+03,  -0.14407E+03,  ! 1/(d+50)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! 1/(d+50)2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]
     *   0.72319E-02,   0.72319E-02,   0.72319E-02,  ! Akl
     *  -0.27244E-04,  -0.27244E-04,  -0.27244E-04,  ! Akl2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! SI(T)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! lat
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]
     *  -0.57810E-05,  -0.57810E-05,  -0.57810E-05,  ! lat*alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! tp
     *   0.18040E+00,   0.18040E+00,   0.18040E+00,  ! gp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! bp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! kust
     *   0.18800E+00,   0.18800E+00,   0.18800E+00,  ! sost
     *  -0.18416E+00,  -0.18416E+00,  -0.18416E+00,  ! reg5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]
     *  -0.17410E+00,  -0.17410E+00,  -0.17410E+00,  ! delyta
     *   0.52974E+01,   0.52974E+01,   0.52974E+01/  ! c
      DATA        ((coe(i,j,6),j=1,3),i=1,30)/
c          Ek N             M             S
     *  -0.25811E+03,  -0.25811E+03,  -0.25811E+03,  ! 1/(d+50)
     *   0.63100E+04,   0.63100E+04,   0.63100E+04,  ! 1/(d+50)2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![1/(t+10)2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![t]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![d/t]
     *  -0.32505E+00,  -0.32505E+00,  -0.32505E+00,  ! dkvot
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! dkvot2
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![G2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! Akl
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! Akl2
     *   0.13039E-02,   0.13039E-02,   0.13039E-02,  ! SI(T)
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![SI(G)]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! lat
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![lat2]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![alt2]
     *  -0.41543E-05,  -0.41543E-05,  -0.41543E-05,  ! lat*alt
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! tp
     *   0.59855E-01,   0.59855E-01,   0.59855E-01,  ! gp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! bp
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![bop]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ! kust
     *   0.17355E+00,   0.17355E+00,   0.17355E+00,  ! sost
     *  -0.47987E-01,  -0.47987E-01,  -0.47987E-01,  ! reg5
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![mar]
     *   0.00000E+00,   0.00000E+00,   0.00000E+00,  ![kont]
     *  -0.69304E-01,  -0.69304E-01,  -0.69304E-01,  ! delyta
     *   0.57884E+01,   0.57884E+01,   0.57884E+01/  ! c
      DATA        logbias/
     *   0.01155, 0.00938, 0.01264, ! Tall
     *   0.01095, 0.01095, 0.01051, ! Gran
     *   0.01248, 0.01248, 0.01901, ! Bj”rk
     *   0.01248, 0.01248, 0.01901, ! ™vr l”v (uppg saknas; Bj”rk)
     *   0.01296, 0.01296, 0.01296, ! Bok
     *   0.01584, 0.01584, 0.01584/ ! Ek

      do 10 i=1,30
10       var(i)=0.0

c-- ytvar
      var(11)=iat_2
      var(12)=var(11)*var(11)
      var(13)=hct_2
      var(15)=bgr_3
      var(17)=hoh_3
      var(19)=var(15)*var(17)
      var(20)=ata_2
      var(21)=agr_2
      var(22)=abj_2
      var(25)=sost_3
      var(26)=reg5_3
      var(29)=del_2
      var(30)=1.

c-- tr„dslagsvis ber„kning
      do 20 j=1,6
         h_t(j)=0.0
         do 20 i=9,30
20          h_t(j)=h_t(j)+var(i)*coe(i,reg_3,j)
!	  h_t(4)=max(h_t(4),0.8*h_t(3))
!	  h_t(5)=max(h_t(5),0.8*h_t(3))
!	  h_t(6)=max(h_t(6),0.8*h_t(3))
c-- tr„dvis ber„kning
      do 30 k=1,n_2
         var(1)=1./(11.2838*SQRT(gdi_1(k))+50.)
         var(2)=var(1)*var(1)
         var(8)=gdi_1(k)/gmx_2
         var(7)=SQRT(var(8))
         h_1(k)=h_t(its_1(k))+logbias(reg_3,its_1(k))
         do 32 i=1,8
32          h_1(k)=h_1(k)+var(i)*coe(i,reg_3,its_1(k))
30       h_1(k)=EXP(h_1(k))

      RETURN
      END

      SUBROUTINE GALLREK (H100,iper,utt, q)
c-----------------------------------------------------------------------
c   Bengt Jonssons gallringsreaktionsfunktioner (Rapport 7/1980)
c
c   (in)   h100   = bonitet dominerande tr„dslag gran eller tall (dm)
c                   (gran om inte tallandel > „n granandel)
c          iper   = aktuell period
c          utt(i) = gallringsstyrka vid gallring i (decimalt)
c   (ut)   q      = gallringsreaktion (decimalt)
c-----------------------------------------------------------------------
c-- formella parametrar
      INTEGER*4 iper
      REAL*4    h100,utt(1),q
c-- lokala deklarationer
      INTEGER*4   jk,t
      REAL*4      kgall(7,4)
      DATA        kgall/
     *  .796470, .802945, .671015, .329005, .245454, .343290, .455010,
     *  .744640, .737545, .607485, .295185, .207830, .321480, .410124,
     *  .462950, .787960, .982760, .641320, .487370, .407524, .315065,
     *  .032197, .493077, .951657, .303367, .382706, .494296, .404713/

      q=0.0
      IF (H100.GE.260.) then
         JK=1
      elseIF (H100.GE.215.)then
         JK=2
      elseIF (H100.GT.160.)then
         JK=3
      else
         JK=4
      endif
      do 18 t=1,iper
18       q=q+kgall(min(7,iper-t+1),jk)*utt(t)
      q=exp(q)

      RETURN
      END

      SUBROUTINE xBPSJGALL(gryta,stot,akl,s,ireg, ag,rd)
c-----------------------------------------------------------------------
c  (in) gryta   = grundyta (m2/ha)
c       stot    = stamantal (/ha)
c       akl    = total†lder
c       s(i)    = stamantal tr„dslag i (/ha)
c       ireg    = reion (1=  ; 2=  ; 3=
c  (ut) ag(i)   = avg†ng (5 †r) andel av grundyta f”r tr„dslag i (dec.)
c       rd(i)   = relativ dia hos tr„d som avg†r f”r tr„dslag i (dec.)
c-----------------------------------------------------------------------
c-- formella parameterar
      INTEGER*4 ireg
      REAL*4    gryta,stot,akl,s(10),ag(10),rd(10)
c-- lokala deklarationer
      INTEGER*4 j
      REAL*4    alkl,tot,tots,a1,a2

C-- †ldersklass
      if(akl.lt.100)then
         ALKL=AKL/10.+1.
      else
         ALKL=min((AKL-100)/20*2+12.,17.)
      endif

c-- tr„dslagsvis ber„kning
      DO 300 J=1,10
         rd(J)=0.
300      AG(J)=0.

      DO 200 J=1,10
         IF (S(J).LT..0001) GO TO 200
         TOT=GRYTA
         TOTS=STOT
         IF(IREG.lt.3)then
            IF(J.eq.1)then
*              TALL NORRA- OCH MELLAN-SVERIGE
               IF(TOTS.GT.2700) TOTS=2700
               A1=.03143-.006877*TOT+.0002056*TOT*TOT
     *            +.00002684*TOTS-.5092E-08*TOTS*TOTS
               A2=.14
            elseif(J.eq.2)then
*              GRAN NORRA- OCH MELLAN-SVERIGE
               A1=-.002748+.00004493*TOT+.00002515*TOT*TOT
               A2=-.000236+.0250275*ALKL
            elseif(j.eq.3)then
*              BJ\RK NORRA- OCH MELLAN-SVERIGE
               A1=-.02513+.005484*TOT
               A2=.78
            else
*              \VRIGT NORRA- OCH MELLAN-SVERIGE
               A1=-.007277-.002456*TOT+.0001923*TOT*TOT
               A2=.35
            endif
         else
            if(J.eq.1)then
*              TALL S\DRA SVERIGE
               IF(TOTS.GE.4000) TOTS=4000
               A1=-.06766-.001283*TOT+.00007748*TOT*TOT
     *            +.0001441*TOTS-.1839E-07*TOTS*TOTS
               A2=.38
            elseif(J.eq.2)then
*              GRAN S\DRA SVERIGE
               IF(TOTS.GT.2800)TOTS=2800
               A1=.01235-.002749*TOT+.00008214*TOT*TOT
     *            +.00002457*TOTS-.4498E-08*TOTS*TOTS
               A2=.36
            else
*              BJ\RK+\VRIGT S\DRA SVERIGE
               A1=.04
               A2=.46
            endif
         endif

c-- Ta bort tr„ngselavg†ng f”r att f† ”verensst„mmelse med HUGIN
!      A1=0.0

*     BER[KNING AV NETTOGRUNDYTAN OCH NETTOSTAMANTALET

         IF(A1.LT..00001) A1=0.
         A1=A1/20.*2.
         A2=A2/20.
         AG(J)=A1+A2
         rd(J)=1.
  200    CONTINUE

      RETURN
      END

      SUBROUTINE xBPSJGFAS(akl,gryta,tp,gp,th100,gh100, ag,rd)
***********************************************************************
** [NDAM]L: ANDEL AV GRUNDYTAN SOM SJ[LVGALLRAS under perioden        **
**
** (in) akl   = ytans total†lder
**      gryta  = grundyta (m2/ha)
**      tp     = andel tall (decimalt)
**      gp     =   "   gran (")
**      th100  = bonitet tall (dm)
**      gh100  =   "     gran (")
c  (ut) ag(i)   = avg†ng (5 †r) andel av grundyta f”r tr„dslag i (dec.)
c       rd(i)   = relativ dia hos tr„d som avg†r f”r tr„dslag i (dec.)
************************************************************************
c-- formella parametrar
      REAL*4    akl,gryta,tp,gp,th100,gh100, ag(10),rd(10)
c-- lokala deklarationer
      REAL*4    C(11),r(11),funk
      INTEGER*4 i
      DATA C
     */  6.09490E-1, -1.25903E+1,  3.31700E-4, -1.00600E-2,  1.73000E-4,
     *   1.56000E-4, -1.30000E-2,  1.19000E-2,  1.89000E-2, -1.74000E-2,
     *   2.32000E-2/

**    INVERTERAD TOTAL]LDER
      R(1)  = 1.0/(AKL+10.)
**    KVADRERAD INVERTERAD TOTAL]LDER
      R(2)  = R(1)**2
**    GRUNDYTA
      R(3)  = GRYTA
**    LOGARITMERAD GRUNDYTA
      R(4)  =ALOG(R(3))
**    ST]NDORTSINDEX MED TALL SOM BONITETSVISANDE TR[DSLAG
      IF (tp .GE. 0.50) THEN
          R(5)  = 0.00
          R(6)  = TH100/10.
**    ST]NDORTSINDEX MED GRAN SOM BONITETSVISANDE TR[DSLAG
      ELSE
          R(5)  = GH100/10.
          R(6)  = 0.00
      ENDIF
**    GRANANDEL
      R(7)  = gp
**    KVADRERAD GRANANDEL
      R(8)  = R(7)**2
**    L\VANDEL
      R(9)  = 1.00-tp-gp
**    KVADRERAD L\VANDEL
      R(10) = R(9)**2
**    KONSTANT
      R(11) = 1.00

      FUNK = C( 1)*R( 1) + C( 2)*R( 2) + C( 3)*R( 3) + C( 4)*R( 4)
     .     + C( 5)*R( 5) + C( 6)*R( 6) + C( 7)*R( 7) + C( 8)*R( 8)
     .     + C( 9)*R( 9) + C(10)*R(10) + C(11)*R(11)

      funk = FUNK*5.
      funk=max(0.0,min(1.,funk))

      do 10 i=1,10
         ag(i)=funk
10       rd(i)=1.

      RETURN
      END

      REAL*4 FUNCTION xBPSJGGRY(akl,tp,gp,th100,gh100,stot)
************************************************************************
** [NDAM]L: GRUNDYTEGR[NS F\R SJ[LVGALLRING                           **
**                                                                    **
** (in) akl   = ytans total†lder
**      tp     = andel tall (decimalt)
**      gp     =   "   gran (")
**      th100  = bonitet tall (dm)
**      gh100  =   "     gran (")
**      stot   = totalt stamantal (/ha)
** (ut) sjggry = "sj„lvgallringsgr„ns" (m2/ha)
************************************************************************
c-- formella parametrar
      REAL*4    akl,tp,gp,th100,gh100,stot
c-- lokala deklarationer
      REAL*4    C(11),r(11),funk
      DATA c
     ./-1.86120E+1, -7.65295E+2,  4.79800E-2,  5.58900E-2,  6.71700E-5,
     . -2.86400E-9,  7.20400E-1, -4.87900E-1,  1.06200E-1, -2.07300E-1,
     .  2.52250E+0/

**    INVERTERAD TOTAL]LDER
      R(1)  = 1.0/(AKL+10.0)
**    KVADRERAD INVERTERAD TOTAL]LDER
      R(2)  = R(1)**2
**    ST]NDORTSINDEX MED TALL SOM BONITETSVISANDE TR[DSLAG
      IF (tp .GE. 0.50) THEN
          R(3)  = 0.00
          R(4)  =TH100/10.
**    ST]NDORTSINDEX MED GRAN SOM BONITETSVISANDE TR[DSLAG
      ELSE
          R(3)  =GH100/10.
          R(4)  = 0.00
      ENDIF
**    STAMANTAL
      R(5)  = STOT
**    KVADRERAT STAMANTAL
      R(6)  = R(5)**2
**    GRANANDEL
      R(7)  = gp
**    KVADRERAD GRANANDEL
      R(8)  = R(7)**2
**    L\VANDEL
      R(9)  = 1.00-tp-gp
**    KVADRERAD L\VANDEL
      R(10) = R(9)**2
**    KONSTANT
      R(11) = 1.00

      FUNK = C( 1)*R( 1) + C( 2)*R( 2) + C( 3)*R( 3) + C( 4)*R( 4)
     .     + C( 5)*R( 5) + C( 6)*R( 6) + C( 7)*R( 7) + C( 8)*R( 8)
     .     + C( 9)*R( 9) + C(10)*R(10) + C(11)*R(11)

      BPSJGGRY = EXP(FUNK)

      RETURN
      END

      INTEGER*4 FUNCTION HaegglHDOM(typ,bgr,h100,its,ix)
c-----------------------------------------------------------------------
c  ™vre h”jd/total†lder enligt H„gglund (Om ”vre h”jdens utveckling ...)
c
c  (in)  typ   = 1=HaegglHDOM s”kes; 2=total†lder s”kes
c        bgr   = breddgrad (o)
c        h100  = bonitet h100 (dm)
c        its   = bonitetbest„mmande tr„dslag (1=tall; 2=gran; (3+=tall))
c        ix    = typ=1 => total†lder best†nd
c                typ=2 => ”vre h”jd (dm)
c  (ut)  HaegglHDOM  = typ=1 => ”vre h”jd (dm)
c                      typ=2 => total†lder best†nd
c-----------------------------------------------------------------------
      INTEGER*4   typ,its,ix,iat,ihd,t0hdom(11,12),gshdom(12,10),
     *            gnhdom(11,20),T13,bon,t,i
      REAL*4      bgr,h100

      DATA     t0hdom/
c  Tall
c     T12  T14  T16  T18  T20  T22  T24  T26  T28  T30  T32   BHA
     *27,  30,  34,  39,  44,  49,  55,  62,  69,  77,  85,  !10
     *42,  49,  57,  65,  74,  84,  95,  107, 119, 132, 146, !20
     *58,  67,  78,  89,  102, 115, 129, 144, 160, 176, 194, !30
     *72,  84,  97,  110, 125, 141, 157, 174, 192, 211, 230, !40
     *86,  99,  114, 129, 145, 162, 180, 199, 218, 238, 259, !50
     *98,  112, 128, 145, 162, 181, 199, 219, 239, 259, 280, !60
     *109, 124, 141, 158, 177, 196, 215, 235, 255, 276, 296, !70
     *119, 135, 152, 170, 189, 208, 228, 248, 268, 288, 309, !80
     *128, 144, 162, 180, 199, 219, 238, 258, 278, 298, 318, !90
     *135, 152, 171, 189, 208, 227, 247, 266, 286, 305, 325, !100
     *143, 160, 178, 196, 215, 234, 253, 273, 292, 311, 330, !110
     *149, 166, 184, 203, 221, 240, 259, 278, 297, 316, 334/ !120
      DATA     gshdom/
c  Gran - S:a Sv
c     G16  G18  G20  G22  G24  G26  G28  G30  G32  G34  G36  G38   BHA
     *28,  32,  36,  40,  45,  50,  55,  60,  66,  71,  77,  83,  !10
     *48,  55,  63,  72,  81,  90,  100, 110, 120, 131, 141, 152, !20
     *68,  79,  90,  102, 114, 127, 140, 154, 168, 182, 196, 209, !30
     *88,  101, 115, 129, 144, 160, 175, 191, 207, 224, 240, 256, !40
     *106, 121, 137, 153, 170, 187, 204, 222, 239, 257, 275, 293, !50
     *123, 140, 157, 173, 192, 210, 228, 247, 265, 285, 303, 322, !60
     *138, 156, 173, 191, 210, 229, 248, 267, 286, 306, 325, 345, !70
     *152, 170, 188, 206, 226, 245, 264, 284, 303, 323, 343, 362, !80
     *164, 182, 201, 219, 239, 258, 277, 297, 316, 337, 356, 376, !90
     *175, 193, 212, 230, 250, 269, 288, 308, 327, 347, 367, 387/ !100
      DATA     gnhdom/
c  Gran - N:a Sv
c     G8   G10  G12  G14  G16  G18  G20  G22  G24  G26  G28   BHA
     *17,  19,  21,  24,  27,  30,  35,  40,  47,  54,  62,  !10
     *24,  28,  34,  39,  46,  53,  62,  71,  82,  94,  107, !20
     *33,  40,  48,  56,  66,  76,  88,  100, 114, 129, 145, !30
     *42,  52,  62,  73,  85,  98,  112, 127, 143, 160, 178, !40
     *52,  64,  77,  90,  104, 119, 134, 151, 168, 187, 205, !50
     *62,  76,  91,  106, 121, 137, 154, 172, 190, 209, 228, !60
     *72,  88,  104, 120, 137, 154, 172, 190, 209, 229, 248, !70
     *81,  99,  116, 134, 151, 169, 188, 206, 226, 245, 264, !80
     *90,  109, 128, 146, 164, 183, 201, 220, 240, 259, 278, !90
     *99,  119, 138, 157, 176, 195, 213, 232, 252, 271, 290, !100
     *107, 128, 148, 167, 186, 205, 224, 243, 262, 281, 299, !110
     *114, 136, 157, 176, 195, 214, 233, 252, 271, 289, 307, !120
     *122, 144, 165, 184, 204, 223, 241, 260, 278, 296, 314, !130
     *128, 151, 172, 192, 211, 230, 248, 266, 285, 302, 320, !140
     *134, 157, 178, 198, 217, 236, 254, 272, 290, 308, 324, !150
     *140, 163, 184, 204, 223, 242, 260, 277, 295, 312, 328, !160
     *145, 168, 190, 209, 228, 246, 264, 282, 299, 316, 332, !170
     *150, 173, 195, 214, 233, 251, 268, 285, 302, 319, 335, !180
     *154, 178, 199, 218, 237, 254, 272, 288, 305, 321, 337, !190
     *159, 182, 203, 222, 240, 258, 275, 291, 307, 323, 339/ !200

      if(typ.eq.2)go to 10

c-- Best„m ”vre h”jden som funktion av total†lder
      iat=ix
      bon=nint((h100+1.)/10.)
      if(its.ne.2)then                          ! Tall
         bon=min(32,max(12,bon))
         bon=(bon-10)/2
         t=(iat-T13(bgr,h100,its))/10+1
         t=max(2,min(12,t))
         HaegglHDOM=t0hdom(bon,t-1)+
     *   	nint((t0hdom(bon,t)-t0hdom(bon,t-1))*
     *        (iat-T13(bgr,h100,its)-10*(t-1))/10.)
      elseif(bgr.le.60.)then                    ! Gran - S:a Sv
         bon=min(38,max(16,bon))
         bon=(bon-14)/2
         t=(iat-T13(bgr,h100,its))/10+1
         t=max(2,min(10,t))
         HaegglHDOM=gshdom(bon,t-1)+
     *		nint((gshdom(bon,t)-gshdom(bon,t-1))*
     *      (iat-T13(bgr,h100,its)-10*(t-1))/10.)
      else                                      ! Gran - N:a Sv
         bon=min(28,max(8,bon))
         bon=(bon-6)/2
         t=(iat-T13(bgr,h100,its))/10+1
         t=max(2,min(20,t))
         HaegglHDOM=gnhdom(bon,t-1)+
     * 		nint((gnhdom(bon,t)-gnhdom(bon,t-1))*
     *        (iat-T13(bgr,h100,its)-10*(t-1))/10.)
      endif

      RETURN

c-- Best„m total†lder som funktion av ”vre h”jden
10    ihd=ix
      bon=nint((h100+1.)/10.)
      if(its.ne.2)then                          ! Tall
         bon=min(32,max(12,bon))
         bon=(bon-10)/2
         do 12 i=2,11
12       if(ihd.lt.t0hdom(bon,i))go to 14
14          t=10*(i-1)+nint(10.*(ihd-t0hdom(bon,i-1))/
     *        real(t0hdom(bon,i)-t0hdom(bon,i-1)))
         HaegglHDOM=max(0,t)+T13(bgr,h100,its)
      elseif(bgr.le.60.)then                    ! Gran - S:a Sv
         bon=min(38,max(16,bon))
         bon=(bon-14)/2
         do 16 i=2,9
16       if(ihd.lt.gshdom(bon,i))go to 18
18          t=10*(i-1)+nint(10.*(ihd-gshdom(bon,i-1))/
     *        real(gshdom(bon,i)-gshdom(bon,i-1)))
         HaegglHDOM=max(0,t)+T13(bgr,h100,its)
      else                                      ! Gran - N:a Sv
         bon=min(28,max(8,bon))
         bon=(bon-6)/2
         do 20 i=2,19
20       if(ihd.lt.gnhdom(bon,i))go to 22
22          t=10*(i-1)+nint(10.*(ihd-gnhdom(bon,i-1))/
     *        real(gnhdom(bon,i)-gnhdom(bon,i-1)))
         HaegglHDOM=max(0,t)+T13(bgr,h100,its)
      endif

      RETURN
      END

      INTEGER*4 FUNCTION T13(bgr,h100,its)
c-----------------------------------------------------------------------
c  Tid till br”sth”jd enligt H„gglund (Om ”vre h”jdens utveckling ...)
c
c  (in)  bgr   = breddgrad (o)
c        h100  = bonitet h100 (dm)
c        its   = bonitetbest„mmande tr„dslag (1=tall; 2=gran; (3+=tall))
c  (ut)  T13   = tid till ”vre h”jd
c-----------------------------------------------------------------------
      INTEGER*4   its,t0t13(11),gst13(12),gnt13(11),bon
      REAL*4      bgr,h100
      DATA     t0t13/
c  Tall
c     T12  T14  T16  T18  T20  T22  T24  T26  T28  T30  T32
     *19,  16,  12,  11,  9,   9,   8,   8,   8,   7,   7/
      DATA     gst13/
c  Gran - S:a Sv
c     G16  G18  G20  G22  G24  G26  G28  G30  G32  G34  G36  G38
     *12,  11,  10,  10,  9,   9,   8,   8,   7,   7,   7,   7/
      DATA     gnt13/
c  Gran - N:a Sv
c     G8   G10  G12  G14  G16  G18  G20  G22  G24  G26  G28   BHA
     *22,  19,  17,  15,  13,  12,  11,  11,  10,  10,  9/

      bon=nint((h100+1.)/10.)
      if(its.ne.2)then                          ! Tall
         bon=min(32,max(12,bon))
         bon=(bon-10)/2
         T13=t0t13(bon)
      elseif(bgr.le.60.)then                    ! Gran - S:a Sv
         bon=min(38,max(16,bon))
         bon=(bon-14)/2
         T13=gst13(bon)
      else                                      ! Gran - N:a Sv
         bon=min(28,max(8,bon))
         bon=(bon-6)/2
         T13=gnt13(bon)
      endif

      RETURN
      END

      REAL*4 FUNCTION V1(typ,bgr,hoh,its,d,h)
c-----------------------------------------------------------------------
c  Mindre funktioner enligt: Brandel, G. 1990. Rapport nr 26, Inst f skogs-
c  produktion.
c  F”r ek och bok enligt: Hagberg, E. och Mat‚rn, B. 1975. Volymfunktioner
c  f”r st†ende tr„d av ek och bok. Materialet och dess bearbetning.
c  Rapporter och uppsatser nr 15, Institutionen f”r skoglig matematisk
c  statistik, Skogsh”gskolan. Stockholm.
c
c  Ger volym ”ver stubbe; pb eller ub beroende p† typ.
c
c  (in)  typ   = 'pb' eller 'ub'
c        bgr   = breddgrad (o)
c        hoh   = h”jd ”ver havet (m)
c        its   = tr„dslag
*        1=TALL,2=GRAN,3=BJ\RK,4=\VR.L\V,5=BOK,6=EK (KOD 5,6 [NDR 8509)
c        d     = typ='pb' => dia pb; typ='ub' => dia ub (cm)
c        h     = h”jd (m)
c  (ut)  V1    = volym pb/ub (dm3)
c-----------------------------------------------------------------------
      CHARACTER   typ*2
      INTEGER*4   its,ireg,its2,ityp,ibg,ihh,i
      REAL*4      bgr,hoh,d,h,c(4,2,3,2),a(12,2,3,2)
      REAL*4      h2

      DATA     c/
c             d      d+20        h     h-1.3
     *  1.83182,  0.07275, 2.12777, -1.09439,   ! Tall - S:a Sv - pb
     *  1.94126, -0.11924, 1.80842, -0.74261,   ! Tall - S:a Sv - ub
     *  2.00128, -0.47473, 2.87138, -1.61803,   ! Gran - S:a Sv - pb
     *  1.97159, -0.42776, 2.84877, -1.58630,   ! Gran -  S:a Sv - ub
     *  2.23818, -1.06930, 6.02015, -4.51472,   ! Bj”rk - S:a Sv - pb
     *  2.17999, -0.78580, 5.08267, -3.68585,   ! Bj”rk - S:a Sv - ub
     *  1.93867, -0.04966, 1.81528, -0.80910,   ! Tall - N:a Sv - pb
     *  1.95783, -0.06331, 1.14967, -0.15286,   ! Tall - N:a Sv - ub
     *  2.11123, -0.76342, 3.07608, -1.78237,   ! Gran - N:a Sv - pb
     *  2.08706, -0.78814, 3.20560, -1.87006,   ! Gran -  N:a Sv - ub
     *  2.47580, -1.40854, 5.16863, -3.77147,   ! Bj”rk - N:a Sv - pb
     *  2.36594, -1.10578, 4.76151, -3.40177/   ! Bj”rk - N:a Sv - ub
      DATA     a/
c (hoh,gbr)=   1,1   1,2   1,3   1,4
c              2,1   2,2   2,3   2,4
c              3,1   3,2   3,3   3,4
     * -1.40718, -1.41955, -1.41472, -1.41472,  ! Tall - S:a Sv - pb
     * -1.40718, -1.41955, -1.41472, -1.41472,
     * -1.40718, -1.41955, -1.41472, -1.41472,  
     * -1.23602, -1.23602, -1.23602, -1.23602,  ! Tall - S:a Sv - ub
     * -1.23602, -1.23602, -1.23602, -1.23602,
     * -1.23602, -1.23602, -1.23602, -1.23602,  
     * -1.02039, -1.02039, -1.02039, -1.02039,  ! Gran - S:a Sv - pb
     * -1.02039, -1.02039, -1.02039, -1.02039,
     * -1.02039, -1.02039, -1.02039, -1.02039,
     * -1.07676, -1.07676, -1.07676, -1.07676,  ! Gran -  S:a Sv - ub
     * -1.07676, -1.07676, -1.07676, -1.07676,
     * -1.07676, -1.07676, -1.07676, -1.07676,
     * -0.89363, -0.85480, -0.84627, -0.84627,  ! Bj”rk - S:a Sv - pb
     * -0.89363, -0.85480, -0.84627, -0.84627,
     * -0.89363, -0.85480, -0.84627, -0.84627,
     * -1.09588, -1.06101, -1.05775, -1.05775,  ! Bj”rk - S:a Sv - ub
     * -1.09588, -1.06101, -1.05775, -1.05775,
     * -1.09588, -1.06101, -1.05775, -1.05775,
     * -1.30052, -1.29068, -1.28297, -1.28213,  ! Tall - N:a Sv - pb
     * -1.30052, -1.29068, -1.28297, -1.28213,
     * -1.30052, -1.29068, -1.28297, -1.28213,
     * -1.22703, -1.22703, -1.22703, -1.22703,  ! Tall - N:a Sv - ub
     * -1.22910, -1.22910, -1.22910, -1.22910,
     * -1.23646, -1.23646, -1.23646, -1.23646,
     * -0.74910, -0.75384, -0.75549, -0.76640,  ! Gran - N:a Sv - pb
     * -0.75208, -0.75682, -0.75847, -0.76938,
     * -0.76488, -0.76962, -0.77127, -0.78218,
     * -0.74346, -0.74666, -0.74751, -0.75943,  ! Gran -  N:a Sv - ub
     * -0.74709, -0.75029, -0.75114, -0.76306,
     * -0.75667, -0.75987, -0.76072, -0.77264,
     * -0.44224, -0.44224, -0.44224, -0.44224,  ! Bj”rk - N:a Sv - pb
     * -0.44224, -0.44224, -0.44224, -0.44224,
     * -0.44224, -0.44224, -0.44224, -0.44224,
     * -0.72541, -0.72541, -0.72541, -0.72541,  ! Bj”rk - N:a Sv - ub
     * -0.72541, -0.72541, -0.72541, -0.72541,
     * -0.72541, -0.72541, -0.72541, -0.72541/

c-- Tall, gran, bj”rk o ”vr. l”v (Brandel) -----------------------------

      if(its.le.4)then
         ireg=1
         if(bgr.gt.60.)ireg=2
         its2=min(3,its)
         ityp=1
         if(typ.eq.'ub')ityp=2
   
         if(ireg.eq.1)then
            ihh=1
            if(hoh.ge.100.)ihh=2
            if(hoh.ge.300.)ihh=3
            ibg=1
            if(bgr.ge.57.)ibg=2
            if(bgr.ge.59.)ibg=3
         else
            ihh=1
            if(hoh.ge.200.)ihh=2
            if(hoh.ge.500.)ihh=3
            ibg=1
            if(bgr.ge.63.)ibg=2
            if(bgr.ge.65.)ibg=3
            if(bgr.ge.67.)ibg=4
         endif
         i=4*(ihh-1)+ibg
   
         h2= max(1.4,h)
		 V1=10.    **a(i,ityp,its2,ireg)*
     *   d      **c(1,ityp,its2,ireg)*
     *   (d+20.)**c(2,ityp,its2,ireg)*
     *   h2      **c(3,ityp,its2,ireg)*
     *   (h2-1.3)**c(4,ityp,its2,ireg)

c-- Bok (5) o ek (6) (Hagberg och Matern) ------------------------------
c-- Stamvirke, medeltal odelade stammar --------------------------------

      elseif(its.eq.5)then
         V1=0.01275*d*d*h+0.12368*d*d+0.0004701*d*d*h*h+0.00622*d*h*h ! bok
      else                                                            ! ek
         V1=0.03522*d*d*h+0.08772*d*h-0.04905*d*d
      endif

      RETURN
      END
